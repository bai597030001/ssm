<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 指定扫描包路径-->
    <!-- 在application context和dispatcher-servlet定义的bean最好不要重复，
        dispatcher-servlet最好只是定义控制器、拦截uri转发view。
        dispatcher-servlet最好只扫描@controler，applicationContext扫描其它
    -->
    <!-- 开启Spring注解模式 -->
    <context:annotation-config/>
    <!-- 开启SpringMVC注解模式, 如:RequestMapping等 -->
    <mvc:annotation-driven/>
    <!-- 扫描web相关的bean 注意：需要开启上述 context:annotation-config 和 mvc:annotation-driven 两个注解才生效 -->
    <context:component-scan base-package="com.sample.ssm.controller"/>
    <!-- 定义controller bean-->
    <!-- <bean id="helloController" class="com.sample.ssm.controller.HelloController"/>-->
    <!--添加视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- mvc资源服务配置: 将WEB-INF/imgs/的图片资源对外暴露的url为 /imgs/*-->
    <mvc:resources location="WEB-INF/imgs/" mapping="/imgs/**"/>
    <!-- 配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有的请求，这个必须写在前面，也就是写在【不拦截】的上面 -->
            <mvc:mapping path="/*"/>
            <!-- 但是排除下面这些，也就是不拦截请求 -->
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/register"/>
            <mvc:exclude-mapping path="/error"/>
            <!-- 拦截器java代码路径 -->
            <bean class="com.sample.ssm.config.ShiroHandlerInterceptorAdapter"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
</beans>
